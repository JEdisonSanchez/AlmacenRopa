@model AlmacenRopa.Models.C_USER

@{
    ViewBag.Title = "Create"; 
    var Sesion = Context.Session["rol"];

   

}

<h2>Create</h2>

@using (Html.BeginForm("Create", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>C_USER</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.IDENTIFICATIONCARD, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IDENTIFICATIONCARD, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IDENTIFICATIONCARD, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TYPE_IDENTIFICATION, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TYPE_IDENTIFICATION, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TYPE_IDENTIFICATION, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label>Foto</label>
        <input type="file" name="imageload" />
        @Html.ValidationMessageFor(model => model.PHOTO, "", new { @class = "text-danger" })

        @*
            @Html.LabelFor(model => model.PHOTO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PHOTO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PHOTO, "", new { @class = "text-danger" })
            </div>*@
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NAMES, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NAMES, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NAMES, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SURNAMES, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SURNAMES, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SURNAMES, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ADDRESS_USER, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ADDRESS_USER, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ADDRESS_USER, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PHONE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PHONE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PHONE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EMAIL, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ORIGINCITY, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ORIGINCITY, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ORIGINCITY, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SESION_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SESION_NAME, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SESION_NAME, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SESION_PASSWORD, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SESION_PASSWORD, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SESION_PASSWORD, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (Sesion != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.IDROLE, "IDROLE", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IDROLE", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDROLE, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
            <div class="form-group hidden">
                @Html.LabelFor(model => model.IDROLE, "IDROLE", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input id="IDROLE" value="2" />
                </div>
            </div>
    }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @if (Sesion != null)
    {
        @Html.ActionLink("Back to List", "Index")
    }
    else
    {
        @Html.ActionLink("Volver", "Index", "Home")

    }
</div>
